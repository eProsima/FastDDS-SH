@startuml

SystemHandler "0..n" *--> Publisher
SystemHandler "0..n" *--> Subscriber
SystemHandler *--> Participant
SystemHandler ..> dtparser

Participant <-- Publisher
Participant <-- Subscriber

Publisher ..> Conversion
Subscriber ..> Conversion

class SystemHandler {
    + configure() override
    + okay() override
    + spin_once() override
    + subscribe() override
    + advertise() override
}

class Participant {
    - dds::participant
    - map<dds::dynamic_types>
    + register_dynamic_type(name, builder)
    + create_dynamic_data(name)
}

class Publisher {
    - dds::Publisher
    - dds::dynamic_data
    - topic_name
    - message_type
    + publish(DynamicData)
}

class Subscriber {
    - dds::subscriber
    - dds::dynamic_data
    - topic_name
    - message_type
    + receive(dynamic_type_message)
}

class Conversion << (S,#FF7700) Singleton >> {
    + dds_message soss_to_dds(DynamicData)
    + DynamicData dds_to_soss(dds_message)
}

@enduml

